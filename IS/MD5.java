import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Scanner;

// Java program to calculate MD5 hash value
public class MD5 {
    public static String getMd5(String input) {
        try {
            // Static getInstance method is called with hashing MD5
            MessageDigest md = MessageDigest.getInstance("MD5");
            // digest() method is called to calculate message digest
            // of an input digest() return array of byte
            byte[] messageDigest = md.digest(input.getBytes());
            // Convert byte array into signum representation
            BigInteger no = new BigInteger(1, messageDigest);
            // Convert message digest into hex value
            String hashtext = no.toString(16);
            while (hashtext.length() < 32) {
                hashtext = "0" + hashtext;
            }
            return hashtext;
        }
        // For specifying wrong message digest algorithms
        catch (NoSuchAlgorithmException e) {
            throw new RuntimeException(e);
        }
    }

    // Driver code
    public static void main(String args[]) throws NoSuchAlgorithmException {
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        System.out.println("Your HashCode Generated by MD5 is: " + getMd5(s));
        sc.close();
    }
}












/*
 * This Java code demonstrates how to calculate the MD5 hash value of a given input string using the MessageDigest class from the java.security package.

Here's a breakdown of the code:

The code starts by importing necessary classes, including java.math.BigInteger for handling large integers, java.security.MessageDigest for calculating hash values, and java.security.NoSuchAlgorithmException for handling exceptions related to unavailable hash algorithms.

The MD5 class is defined with a getMd5 method that takes an input string and returns its MD5 hash value as a string.

Inside the getMd5 method:

It tries to obtain an instance of the MD5 algorithm using the MessageDigest.getInstance("MD5") method.
The digest method is called on the MessageDigest object, passing the byte representation of the input string using input.getBytes(). This calculates the message digest and returns an array of bytes.
The byte array is converted into a positive BigInteger using new BigInteger(1, messageDigest). The 1 argument signifies a positive signum representation.
The BigInteger is converted into a hex string using no.toString(16), where 16 specifies the base for the conversion.
If the resulting hash string has a length less than 32 (which is the expected length for an MD5 hash), the code adds leading zeros to the string until it reaches the desired length.
Finally, the resulting hash string is returned.
The main method is the entry point of the program. In this case, it demonstrates how to use the getMd5 method by providing a sample input string, "I AM AS CALM AS CLOUDS". The resulting MD5 hash value is printed to the console using System.out.println.

When you run this code, it will output the MD5 hash value for the given input string. In this case, the output will be "b9f00b35a0038a2722b5501e28bca987".
 */